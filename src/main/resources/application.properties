spring.application.name=e-commerce_back

# ===============================
# Server
# ===============================
server.port=${SERVER_PORT:8080}

# ===============================
# PostgreSQL
# ===============================
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Settings (HikariCP)
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAX_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${HIKARI_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1800000}

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:true}
spring.jpa.properties.hibernate.use_sql_comments=${JPA_USE_SQL_COMMENTS:true}

# ===============================
# Redis Configuration
# ===============================
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.database=${REDIS_DATABASE:0}
spring.data.redis.timeout=${REDIS_TIMEOUT:5000ms}

# Redis connection pool (Lettuce)
spring.data.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE:10}
spring.data.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE:5}
spring.data.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE:2}
spring.data.redis.lettuce.pool.max-wait=${REDIS_POOL_MAX_WAIT:3000ms}
spring.data.redis.lettuce.shutdown-timeout=${REDIS_SHUTDOWN_TIMEOUT:100ms}

# ===============================
# JWT Configuration
# ===============================
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION:3600000}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}
app.security.max-concurrent-sessions=${MAX_CONCURRENT_SESSIONS:3}

# ===============================
# Security Configuration
# ===============================
app.security.max-failed-attempts=${MAX_FAILED_ATTEMPTS:5}
app.security.lockout-duration-minutes=${LOCKOUT_DURATION_MINUTES:15}
app.security.failed-attempts-window-minutes=${FAILED_ATTEMPTS_WINDOW_MINUTES:30}
app.security.unlock-code-expiry-minutes=${UNLOCK_CODE_EXPIRY_MINUTES:15}
app.security.refresh-token-expiry-days=${REFRESH_TOKEN_EXPIRY_DAYS:7}
app.security.email-verification-expiry-hours=${EMAIL_VERIFICATION_EXPIRY_HOURS:24}

# ===============================
# Google OAuth Configuration
# ===============================
google.client.id=${GOOGLE_CLIENT_ID}

# ===============================
# Email Configuration
# ===============================
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLE:true}
spring.mail.properties.mail.smtp.starttls.required=${MAIL_SMTP_STARTTLS_REQUIRED:true}
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_SMTP_SSL_TRUST}

# Email Templates Configuration
app.email.from-name=${EMAIL_FROM_NAME}
app.email.from-address=${EMAIL_FROM_ADDRESS}
app.email.activation-code-expiry-minutes=${EMAIL_ACTIVATION_CODE_EXPIRY_MINUTES:15}
app.email.reset-password-code-expiry-minutes=${EMAIL_RESET_PASSWORD_CODE_EXPIRY_MINUTES:10}

# ===============================
# Swagger / OpenAPI
# ===============================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true

# ===============================
# Logging
# ===============================
logging.level.com.e_commerce.e_commerce_back=${LOG_LEVEL_APP:DEBUG}
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:DEBUG}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:DEBUG}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOG_LEVEL_SQL_BINDER:TRACE}

# ===============================
# Actuator (Monitoring)
# ===============================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized